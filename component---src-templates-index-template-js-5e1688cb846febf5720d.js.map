{"version":3,"sources":["webpack:///./src/components/PaginationBox/Search/Search.js","webpack:///./src/components/PaginationBox/PaginationBox.js","webpack:///./src/templates/index-template.js","webpack:///./src/components/Feed/Feed.js","webpack:///./src/components/Feed/index.js"],"names":["Search","_ref","currentPage","language","dates","_useState","useState","year","setYear","_useState2","month","setMonth","searchPage","date","toString","i","length","postedDate","substr","react_default","a","createElement","className","styles","yearOptions","start","end","push","key","value","onChange","event","target","map","option","renderYearSelectBox","options","renderMonthSelectBox","gatsby_browser_entry","to","PaginationBox","totalPage","paginationBoxRef","React","createRef","paginationListRef","paginationUlRef","activePageRef","arrowLeft","arrowRight","toolTipRef","scrollId","useEffect","window","addEventListener","current","moveActivePageCenter","setLinksWidth","setDisplayArrows","colorArrow","getLinksWidth","Math","min","offsetWidth","scrollLeft","setTimeout","style","width","onMouseDown","arrow","setInterval","onScroll","onMouseUp","clearInterval","display","arrowColor","scrollable","color","removeDate","visibility","linkListItems","listItems","_loop","index","ref","onMouseOver","clickedLinkCoordsLeft","getBoundingClientRect","left","bodyCoordsLeft","innerHTML","renderDate","displayDate","onMouseOut","moment","format","Icon","icon","getIcon","list","PaginationBox_Search_Search","__webpack_require__","d","__webpack_exports__","query","IndexTemplate","data","pageContext","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","siteTitle","useSiteMetadata","title","titleJa","siteSubtitle","subtitle","subtitleJa","edges","allMarkdownRemark","pageTitle","Layout","description","Sidebar","isIndex","Page","Feed","components_PaginationBox_PaginationBox","es","_ref2","location","getLanguage","pathname","edge","node","fields","slug","dateTime","frontmatter","categorySlug","category","state","from","components_Feed_Feed"],"mappings":"2OAmNeA,EAvMA,SAAAC,GAA6C,IAA1CC,EAA0CD,EAA1CC,YAAaC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAmBC,EAClCC,mBAAS,IAA1BC,EADmDF,EAAA,GAC7CG,EAD6CH,EAAA,GAAAI,EAEhCH,mBAAS,IAA5BI,EAFmDD,EAAA,GAE5CE,EAF4CF,EAAA,GAIpDG,EAAa,WACjB,GAAKL,EAAL,CAGA,IAAIM,EAAO,KAMX,GAFEA,EAHGH,GAAkB,MAATA,IAGHH,EAAKO,WAAaJ,EAAMI,cAFxBP,EAAKO,WAAa,MAIL,iBAAbV,EAAM,GACf,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAMY,OAAQD,IAAK,CACrC,IAAIE,IAAeb,EAAMW,GAAGG,OAAO,EAAG,GAAKd,EAAMW,GAAGG,OAAO,EAAG,IAC9D,GAAU,IAANH,GAAWE,EAAaJ,EAC1B,OAAO,EAET,GAAIA,EAAOI,EACT,OAAOF,EAAI,EAEb,GAAIA,IAAMX,EAAMY,OAAS,EACvB,OAAOD,EAET,GAAIF,IAASI,EACX,OAAOF,OAIX,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAMY,OAAQD,IAAK,CACrC,IAAIE,IAAeb,EAAMW,GAAG,GAAGG,OAAO,EAAG,GAAKd,EAAMW,GAAG,GAAGG,OAAO,EAAG,IACpE,GAAU,IAANH,GAAWE,EAAaJ,EAC1B,OAAO,EAET,GAAIA,EAAOI,EACT,OAAOF,EAAI,EAEb,GAAIA,IAAMX,EAAMY,OAAS,EACvB,OAAOD,EAET,GACEF,GAAQI,GACRJ,KAAUT,EAAMW,GAAG,GAAGG,OAAO,EAAG,GAAKd,EAAMW,GAAG,GAAGG,OAAO,EAAG,IAE3D,OAAOH,KAyIf,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM,QACpBJ,EAAAC,EAAAC,cAAA,SACgB,OAAblB,EACG,4BACA,kBAENgB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM,gBAlIE,WAC1B,IAAIC,EAAc,GACdC,EAAQ,KAGVA,EADsB,iBAAbrB,EAAM,IACNA,EAAM,GAAG,GAAGc,OAAO,EAAG,IAEtBd,EAAM,GAAGc,OAAO,EAAG,GAE9B,IAAIQ,EAAM,KAERA,EADqC,iBAA5BtB,EAAMA,EAAMY,OAAS,IACvBZ,EAAMA,EAAMY,OAAS,GAAGZ,EAAMA,EAAMY,OAAS,GAAGA,OAAS,GAAGE,OACjE,EACA,IAGKd,EAAMA,EAAMY,OAAS,GAAGE,OAAO,EAAG,GAE3C,IAAK,IAAIH,EAAIU,EAAOV,GAAKW,EAAKX,IAC5BS,EAAYG,KACVR,EAAAC,EAAAC,cAAA,UAAQO,IAAKb,EAAGc,MAAOd,GACpBA,IAIP,OACEI,EAAAC,EAAAC,cAAA,UAAQQ,MAAOtB,EAAMuB,SAAU,kBAAMtB,EAAQuB,MAAMC,OAAOH,SACxDV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MACP,OAAb1B,EAAoB,OAAS,KAE/BqB,EAAYS,IAAI,SAAAC,GAAM,OAAIA,KAqG1BC,GAhGsB,SAAAhC,GAC3B,GAAiB,OAAbA,EACF,OACEgB,EAAAC,EAAAC,cAAA,UAAQQ,MAAOnB,EAAOoB,SAAU,kBAAMnB,EAASoB,MAAMC,OAAOH,SAC1DV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,SAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,WAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,YAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,SAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,SAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,OAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,QAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,QAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,UAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,aAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,WAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,YAGAV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,aAQN,IADA,IAAIO,EAAU,GACLrB,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAIc,EAAQd,EAAI,GAAK,IAAMA,EAAED,WAAaC,EAAED,WAC5CsB,EAAQT,KACNR,EAAAC,EAAAC,cAAA,UAAQO,IAAKC,EAAOA,MAAOA,GACxBd,EAAI,MAIX,OACEI,EAAAC,EAAAC,cAAA,UAAQQ,MAAOnB,EAAOoB,SAAU,kBAAMnB,EAASoB,MAAMC,OAAOH,SAC1DV,EAAAC,EAAAC,cAAA,UAAQO,IAAI,KAAKC,MAAM,MAAvB,KAGCO,EAAQH,IAAI,SAAAC,GAAM,OAAIA,KAoCtBG,CAAqBlC,IA9BnBI,GAAiB,OAATA,EACbK,MAAiBV,EACfiB,EAAAC,EAAAC,cAAA,SACgB,OAAblB,EACG,+BACA,kBAGNgB,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMC,GArHC3B,IAIX,SAAgBA,KAA4B,OAAbT,EAAoB,GAAK,OAFlC,OAAbA,EAAoB,IAAM,MAmHVmB,UAAWC,IAAM,sBACtB,OAAbpB,EAAA,eACiBS,IAAe,GAC1BA,IAAe,EAFrB,QAKHF,GAAmB,OAAVA,EACXS,EAAAC,EAAAC,cAAA,SACgB,OAAblB,EAAoB,sBAAwB,cAE7C,yBCiDOqC,EAjOO,SAAAvC,GAAwD,IAArDC,EAAqDD,EAArDC,YAAauC,EAAwCxC,EAAxCwC,UAAWtC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MACnDsC,EAAmBC,IAAMC,YACzBC,EAAoBF,IAAMC,YAC1BE,EAAkBH,IAAMC,YACxBG,EAAgBJ,IAAMC,YACtBI,EAAYL,IAAMC,YAClBK,EAAaN,IAAMC,YACnBM,EAAaP,IAAMC,YAErBO,EAAW,KAEfC,oBAAU,WACRC,OAAOC,iBAAiB,SAAU,WAC5BT,EAAkBU,UACpBC,IACAC,IACAC,IACAC,OAGJH,IACAC,IACAC,IACAC,MAGF,IAAMC,EAAgB,WACpB,OAAOC,KAAKC,IACVhB,EAAgBS,QAAQQ,YACxBrB,EAAiBa,QAAQQ,YAAc,KAIrCP,EAAuB,WAC3B,IAAIQ,EAA2B,GAAd9D,EAAmB,GAAK0D,IAAkB,EAC3DK,WAAW,kBAAOpB,EAAkBU,QAAQS,WAAaA,GAAa,IAGlEP,EAAgB,WACpBZ,EAAkBU,QAAQW,MAAMC,MAAQP,IAAkB,MAkBtDQ,EAAc,SAAAC,IAfH,SAAAA,GACf,GAA6C,OAAzCxB,EAAkBU,QAAQS,WAA9B,CAGA,IAAInC,EAAkB,SAAVwC,GAAoB,EAAI,EACpClB,EAAWmB,YACT,kBAAOzB,EAAkBU,QAAQS,YAAcnC,GAC/C,IASF0C,CAASF,GACTV,KAGIa,EAAY,WARhBC,cAActB,GAUdQ,KAGID,EAAmB,WAErBZ,EAAgBS,QAAQQ,YACxBrB,EAAiBa,QAAQQ,YAAc,IAEvCf,EAAUO,QAAQW,MAAMQ,QAAU,OAClCzB,EAAWM,QAAQW,MAAMQ,QAAU,SAEnC1B,EAAUO,QAAQW,MAAMQ,QAAU,QAClCzB,EAAWM,QAAQW,MAAMQ,QAAU,UAkBjCC,EAAa,SAAAN,GACjB,OAfiB,SAAAA,GACjB,OAAKxB,EAAkBU,QAGT,SAAVc,EAC8C,IAAzCxB,EAAkBU,QAAQS,WAGjCnB,EAAkBU,QAAQS,aAC1BlB,EAAgBS,QAAQQ,YACtBlB,EAAkBU,QAAQQ,YARrB,KAaLa,CAAWP,GACN,UAEF,WAGHV,EAAa,WACjBX,EAAUO,QAAQW,MAAMW,MAAQF,EAAW,QAC3C1B,EAAWM,QAAQW,MAAMW,MAAQF,EAAW,UAuBxCG,EAAa,WACjB5B,EAAWK,QAAQW,MAAMa,WAAa,UA+BlCC,EAAgB,WAEpB,IADA,IAAIC,EAAY,GADUC,EAAA,SAEjBnE,GAtDK,IAAAoE,EAuDZF,EAAUtD,KACRR,EAAAC,EAAAC,cAAA,MACEO,IAAKb,EACLqE,IAAKrE,IAAMb,EAAc6C,EAAgB,KACzCsC,YAAa,kBApDD,SAACtE,EAAGgB,GACtB,IAAIuD,EAAwBvD,EAAMC,OAAOuD,wBAAwBC,KAC7DC,EAAiB/C,EAAiBa,QAAQgC,wBAAwBC,KACtEtC,EAAWK,QAAQW,MAAMa,WAAa,UACd,iBAAb3E,EAAMW,GACfmC,EAAWK,QAAQmC,UAAYC,EAAWvF,EAAMW,GAAG,IAEnDmC,EAAWK,QAAQmC,UAAYC,EAAWvF,EAAMW,IAElDmC,EAAWK,QAAQW,MAAMsB,KACvBF,EAAwBG,EAAiB,KA0ClBG,CAAY7E,EAAGgB,QAClC8D,WAAYf,EACZxD,UACEC,IAAM,0CAEFR,IAAMb,EAAc,UAAY,MAKtCiB,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMC,IArEE4C,EAqEUpE,EApEV,IAAVoE,EACkB,OAAbhF,EAAoB,IAAM,MAEnC,SAAgBgF,GAAqB,OAAbhF,EAAoB,GAAK,SAiEpBY,EAAI,MAfxBA,EAAI,EAAGA,EAAI0B,EAAW1B,IAAKmE,EAA3BnE,GAmBT,OAAOkE,GAGHU,EAAa,SAAA9E,GACjB,OAAOiF,IAAOjF,GAAMkF,OAAoB,OAAb5F,EAAoB,YAAc,YA6B/D,OACEgB,EAAAC,EAAAC,cAAA,OAAK+D,IAAK1C,EAAkBpB,UAAWC,IAAO,mBAjF5CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,4CACrBJ,EAAAC,EAAAC,cAAA,OACE+D,IAAKlC,EACL5B,UAAWC,IAAO,oCAgFtBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,yBA3BvBJ,EAAAC,EAAAC,cAAA,QACE+D,IAAKpC,EACLoB,YAAa,kBAAMA,EAAY,SAC/BI,UAAWA,EACXlD,UAAWC,IAAO,mCAElBJ,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAMC,YAAQ,gBAnDtB/E,EAAAC,EAAAC,cAAA,OACEkD,SAAUZ,EACVyB,IAAKvC,EACLvB,UAAWC,IAAO,gCAElBJ,EAAAC,EAAAC,cAAA,MACE+D,IAAKtC,EACLxB,UAAWC,IAAO,sCAEjByD,IAAgB/C,IAAI,SAAAkE,GAAI,OAAIA,MAiDjChF,EAAAC,EAAAC,cAAA,QACE+D,IAAKnC,EACLmB,YAAa,kBAAMA,EAAY,UAC/BI,UAAWA,EACXlD,UAAWC,IAAO,oCAElBJ,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAMC,YAAQ,kBAatB/E,EAAAC,EAAAC,cAAC+E,EAAD,CAAQlG,YAAaA,EAAaE,MAAOA,EAAOD,SAAUA,eC3OhEkG,EAAAC,EAAAC,EAAA,0BAAAC,IAcA,IA6CaA,EAAK,aAqCHC,UAlFO,SAAAxG,GAAkC,IAA/ByG,EAA+BzG,EAA/ByG,KAAMC,EAAyB1G,EAAzB0G,YAE3BzG,EAQEyG,EARFzG,YACAuC,EAOEkE,EAPFlE,UACAmE,EAMED,EANFC,YACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACA5G,EAEEwG,EAFFxG,SACAC,EACEuG,EADFvG,MAGI4G,EACS,OAAb7G,EAAoB8G,cAAkBC,MAAQD,cAAkBE,QAC5DC,EACS,OAAbjH,EACI8G,cAAkBI,SAClBJ,cAAkBK,WAEhBC,EAAUb,EAAKc,kBAAfD,MACFE,EACJvH,EAAc,EAAd,OAAyBA,EAAzB,MAA0C8G,EAAcA,EAE1D,OACE7F,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAQR,MAAOO,EAAWE,YAAaP,EAAcjH,SAAUA,GAC7DgB,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAASC,SAAO,IAChB1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMR,MAAOA,IACZ9E,EAAY,EACXtB,EAAAC,EAAAC,cAAC2G,EAAD,CACE9H,YAAaA,EACbuC,UAAWA,EACXqE,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA,EACbzG,SAAUA,EACVC,MAAOA,IAEP,2HCUG2H,EAnDF,SAAA9H,GAAA,IAAGsH,EAAHtH,EAAGsH,MAAH,OACXpG,EAAAC,EAAAC,cAAC4G,EAAA,SAAD,KACG,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACIhI,EAAWiI,YAAYD,EAASE,UACtC,OACElH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM,MACnBgG,EAAMtF,IAAI,SAAAqG,GAAI,OACbnH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM,WAAgBK,IAAK0G,EAAKC,KAAKC,OAAOC,MAC1DtH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,oBACrBJ,EAAAC,EAAAC,cAAA,QACEC,UAAWC,IAAO,wBAClBmH,SAAU5C,IAAOwC,EAAKC,KAAKI,YAAY9H,MAAMkF,OAC3C,iBAGDD,IAAOwC,EAAKC,KAAKI,YAAY9H,MAAMkF,OACrB,OAAb5F,EAAoB,eAAiB,eAGzCgB,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAO,6BACxBJ,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAO,6BACtBJ,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CACEC,GAAO+F,EAAKC,KAAKC,OAAOI,cACT,OAAbzI,EAAoB,GAAK,OAE3BmB,UAAWC,IAAO,kCAEjB+G,EAAKC,KAAKI,YAAYE,YAI7B1H,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAO,qBACpBJ,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CACEhB,UAAWC,IAAO,yBAClBgB,GAAI+F,EAAKC,KAAKC,OAAOC,KACrBK,MAAO,CAAEC,KAAMZ,EAASE,WAEvBC,EAAKC,KAAKI,YAAYzB,QAG3B/F,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAO,2BAClB+G,EAAKC,KAAKI,YAAYhB,oBCrDvCtB,EAAAC,EAAAC,EAAA,sBAAAyC","file":"component---src-templates-index-template-js-5e1688cb846febf5720d.js","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport styles from './Search.module.scss';\n\ntype Props = {\n  prevPagePath: string,\n  nextPagePath: string,\n  hasNextPage: boolean,\n  hasPrevPage: boolean\n};\n\nconst Search = ({ currentPage, language, dates }: Props) => {\n  const [year, setYear] = useState('');\n  const [month, setMonth] = useState('');\n\n  const searchPage = () => {\n    if (!year) {\n      return;\n    }\n    let date = null;\n    if (!month || month == '00') {\n      date = +(year.toString() + '12');\n    } else {\n      date = +(year.toString() + month.toString());\n    }\n    if (typeof dates[0] !== 'object') {\n      for (let i = 0; i < dates.length; i++) {\n        let postedDate = +(dates[i].substr(0, 4) + dates[i].substr(5, 2));\n        if (i === 0 && postedDate < date) {\n          return 0;\n        }\n        if (date > postedDate) {\n          return i - 1;\n        }\n        if (i === dates.length - 1) {\n          return i;\n        }\n        if (date === postedDate) {\n          return i;\n        }\n      }\n    } else {\n      for (let i = 0; i < dates.length; i++) {\n        let postedDate = +(dates[i][0].substr(0, 4) + dates[i][0].substr(5, 2));\n        if (i === 0 && postedDate < date) {\n          return 0;\n        }\n        if (date > postedDate) {\n          return i - 1;\n        }\n        if (i === dates.length - 1) {\n          return i;\n        }\n        if (\n          date <= postedDate &&\n          date >= +(dates[i][0].substr(0, 4) + dates[i][1].substr(5, 2))\n        ) {\n          return i;\n        }\n      }\n    }\n  };\n\n  const getLink = () => {\n    let page = searchPage();\n    if (!page) {\n      return language === 'en' ? '/' : '/ja';\n    }\n    return `/page/${searchPage()}${language === 'en' ? '' : '/ja'}`;\n  };\n\n  const renderYearSelectBox = () => {\n    let yearOptions = [];\n    let start = null;\n\n    if (typeof dates[0] === 'object') {\n      start = +dates[0][0].substr(0, 4);\n    } else {\n      start = +dates[0].substr(0, 4);\n    }\n    let end = null;\n    if (typeof dates[dates.length - 1] === 'object') {\n      end = +dates[dates.length - 1][dates[dates.length - 1].length - 1].substr(\n        0,\n        4\n      );\n    } else {\n      end = +dates[dates.length - 1].substr(0, 4);\n    }\n    for (let i = start; i >= end; i--) {\n      yearOptions.push(\n        <option key={i} value={i}>\n          {i}\n        </option>\n      );\n    }\n    return (\n      <select value={year} onChange={() => setYear(event.target.value)}>\n        <option key=\"00\" value=\"00\">\n          {language === 'en' ? 'Year' : '年'}\n        </option>\n        {yearOptions.map(option => option)}\n      </select>\n    );\n  };\n\n  const renderMonthSelectBox = language => {\n    if (language === 'en') {\n      return (\n        <select value={month} onChange={() => setMonth(event.target.value)}>\n          <option key=\"00\" value=\"00\">\n            Month\n          </option>\n          <option key=\"01\" value=\"01\">\n            January\n          </option>\n          <option key=\"02\" value=\"02\">\n            February\n          </option>\n          <option key=\"03\" value=\"03\">\n            March\n          </option>\n          <option key=\"04\" value=\"04\">\n            April\n          </option>\n          <option key=\"05\" value=\"05\">\n            May\n          </option>\n          <option key=\"06\" value=\"06\">\n            June\n          </option>\n          <option key=\"07\" value=\"07\">\n            July\n          </option>\n          <option key=\"08\" value=\"08\">\n            August\n          </option>\n          <option key=\"09\" value=\"09\">\n            September\n          </option>\n          <option key=\"10\" value=\"10\">\n            October\n          </option>\n          <option key=\"11\" value=\"11\">\n            November\n          </option>\n          <option key=\"12\" value=\"12\">\n            December\n          </option>\n        </select>\n      );\n    }\n\n    let options = [];\n    for (let i = 1; i <= 12; i++) {\n      let value = i < 10 ? '0' + i.toString() : i.toString();\n      options.push(\n        <option key={value} value={value}>\n          {i + '月'}\n        </option>\n      );\n    }\n    return (\n      <select value={month} onChange={() => setMonth(event.target.value)}>\n        <option key=\"00\" value=\"00\">\n          月\n        </option>\n        {options.map(option => option)}\n      </select>\n    );\n  };\n\n  const renderResult = () => {\n    return year && year !== '00' ? (\n      searchPage() === currentPage ? (\n        <p>\n          {language === 'en'\n            ? 'You are on the right page :)'\n            : 'こちらがお探しのページです！'}\n        </p>\n      ) : (\n        <Link to={getLink()} className={styles['search__select__link']}>\n          {language === 'en'\n            ? `Go to page ${searchPage() + 1}`\n            : `${searchPage() + 1}ページへ`}\n        </Link>\n      )\n    ) : month && month !== '00' ? (\n      <p>\n        {language === 'en' ? 'Please select year.' : '年をお選びください。'}\n      </p>\n    ) : null;\n  };\n\n  return (\n    <div className={styles['search']}>\n      <p>\n        {language === 'en'\n          ? 'Search by year and month?'\n          : 'いつのブログをお探しですか？'}\n      </p>\n      <div className={styles['search__select']}>\n        {renderYearSelectBox()}\n        {renderMonthSelectBox(language)}\n      </div>\n      {renderResult()}\n    </div>\n  );\n};\n\nexport default Search;\n","// @flow\nimport React, { useEffect } from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport { getIcon } from '../../utils';\nimport Icon from '../Icon';\nimport Search from './Search';\nimport styles from './PaginationBox.module.scss';\n\ntype Props = {\n  prevPagePath: string,\n  nextPagePath: string,\n  hasNextPage: boolean,\n  hasPrevPage: boolean\n};\n\nconst PaginationBox = ({ currentPage, totalPage, language, dates }: Props) => {\n  const paginationBoxRef = React.createRef();\n  const paginationListRef = React.createRef();\n  const paginationUlRef = React.createRef();\n  const activePageRef = React.createRef();\n  const arrowLeft = React.createRef();\n  const arrowRight = React.createRef();\n  const toolTipRef = React.createRef();\n\n  let scrollId = null;\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      if (paginationListRef.current) {\n        moveActivePageCenter();\n        setLinksWidth();\n        setDisplayArrows();\n        colorArrow();\n      }\n    });\n    moveActivePageCenter();\n    setLinksWidth();\n    setDisplayArrows();\n    colorArrow();\n  });\n\n  const getLinksWidth = () => {\n    return Math.min(\n      paginationUlRef.current.offsetWidth,\n      paginationBoxRef.current.offsetWidth - 72\n    );\n  };\n\n  const moveActivePageCenter = () => {\n    let scrollLeft = currentPage * 32 + 16 - getLinksWidth() / 2;\n    setTimeout(() => (paginationListRef.current.scrollLeft = scrollLeft), 0);\n  };\n\n  const setLinksWidth = () => {\n    paginationListRef.current.style.width = getLinksWidth() + 'px';\n  };\n\n  const onScroll = arrow => {\n    if (paginationListRef.current.scrollLeft === null) {\n      return;\n    }\n    let value = arrow === 'left' ? -2 : 2;\n    scrollId = setInterval(\n      () => (paginationListRef.current.scrollLeft += value),\n      1\n    );\n  };\n\n  const clearId = () => {\n    clearInterval(scrollId);\n  };\n\n  const onMouseDown = arrow => {\n    onScroll(arrow);\n    colorArrow();\n  };\n\n  const onMouseUp = () => {\n    clearId();\n    colorArrow();\n  };\n\n  const setDisplayArrows = () => {\n    if (\n      paginationUlRef.current.offsetWidth <\n      paginationBoxRef.current.offsetWidth - 72\n    ) {\n      arrowLeft.current.style.display = 'none';\n      arrowRight.current.style.display = 'none';\n    } else {\n      arrowLeft.current.style.display = 'block';\n      arrowRight.current.style.display = 'block';\n    }\n  };\n\n  const scrollable = arrow => {\n    if (!paginationListRef.current) {\n      return null;\n    }\n    if (arrow === 'left') {\n      return paginationListRef.current.scrollLeft !== 0;\n    }\n    return (\n      paginationListRef.current.scrollLeft !==\n      paginationUlRef.current.offsetWidth -\n        paginationListRef.current.offsetWidth\n    );\n  };\n\n  const arrowColor = arrow => {\n    if (scrollable(arrow)) {\n      return '#ea6a47';\n    }\n    return '#bbbbbb';\n  };\n\n  const colorArrow = () => {\n    arrowLeft.current.style.color = arrowColor('left');\n    arrowRight.current.style.color = arrowColor('right');\n  };\n\n  const getLink = index => {\n    if (index === 0) {\n      return language === 'en' ? '/' : '/ja';\n    }\n    return `/page/${index}${language === 'en' ? '' : '/ja'}`;\n  };\n\n  const displayDate = (i, event) => {\n    let clickedLinkCoordsLeft = event.target.getBoundingClientRect().left;\n    let bodyCoordsLeft = paginationBoxRef.current.getBoundingClientRect().left;\n    toolTipRef.current.style.visibility = 'visible';\n    if (typeof dates[i] === 'object') {\n      toolTipRef.current.innerHTML = renderDate(dates[i][0]);\n    } else {\n      toolTipRef.current.innerHTML = renderDate(dates[i]);\n    }\n    toolTipRef.current.style.left =\n      clickedLinkCoordsLeft - bodyCoordsLeft + 'px';\n  };\n\n  const removeDate = () => {\n    toolTipRef.current.style.visibility = 'hidden';\n  };\n\n  const renderToolTip = () => {\n    return (\n      <div className={styles['pagination-box__body__tooltip-container']}>\n        <div\n          ref={toolTipRef}\n          className={styles['pagination-box__body__tooltip']}\n        />\n      </div>\n    );\n  };\n\n  const renderLinkList = () => {\n    return (\n      <div\n        onScroll={colorArrow}\n        ref={paginationListRef}\n        className={styles['pagination-box__body__links']}\n      >\n        <ul\n          ref={paginationUlRef}\n          className={styles['pagination-box__body__links__list']}\n        >\n          {linkListItems().map(list => list)}\n        </ul>\n      </div>\n    );\n  };\n\n  const linkListItems = () => {\n    let listItems = [];\n    for (let i = 0; i < totalPage; i++) {\n      listItems.push(\n        <li\n          key={i}\n          ref={i === currentPage ? activePageRef : null}\n          onMouseOver={() => displayDate(i, event)}\n          onMouseOut={removeDate}\n          className={\n            styles[\n              `pagination-box__body__links__list-item${\n                i === currentPage ? '-active' : ''\n              }`\n            ]\n          }\n        >\n          <Link to={getLink(i)}>{i + 1}</Link>\n        </li>\n      );\n    }\n    return listItems;\n  };\n\n  const renderDate = date => {\n    return moment(date).format(language === 'en' ? 'MMM, YYYY' : 'YYYY年M月');\n  };\n\n  const renderLeftArrow = () => {\n    return (\n      <span\n        ref={arrowLeft}\n        onMouseDown={() => onMouseDown('left')}\n        onMouseUp={onMouseUp}\n        className={styles['pagination-box__body-leftarrow']}\n      >\n        <Icon icon={getIcon('leftarrow')} />\n      </span>\n    );\n  };\n\n  const renderRightArrow = () => {\n    return (\n      <span\n        ref={arrowRight}\n        onMouseDown={() => onMouseDown('right')}\n        onMouseUp={onMouseUp}\n        className={styles['pagination-box__body-rightarrow']}\n      >\n        <Icon icon={getIcon('rightarrow')} />\n      </span>\n    );\n  };\n\n  return (\n    <div ref={paginationBoxRef} className={styles['pagination-box']}>\n      {renderToolTip()}\n      <div className={styles['pagination-box__body']}>\n        {renderLeftArrow()}\n        {renderLinkList()}\n        {renderRightArrow()}\n      </div>\n      <Search currentPage={currentPage} dates={dates} language={language} />\n    </div>\n  );\n};\n\nexport default PaginationBox;\n","// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport PaginationBox from '../components/PaginationBox';\nimport { useSiteMetadata } from '../hooks';\nimport type { PageContext, AllMarkdownRemark } from '../types';\ntype Props = {\n  data: AllMarkdownRemark,\n  pageContext: PageContext\n};\n\nconst IndexTemplate = ({ data, pageContext }: Props) => {\n  const {\n    currentPage,\n    totalPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath,\n    language,\n    dates\n  } = pageContext;\n\n  const siteTitle =\n    language === 'en' ? useSiteMetadata().title : useSiteMetadata().titleJa;\n  const siteSubtitle =\n    language === 'en'\n      ? useSiteMetadata().subtitle\n      : useSiteMetadata().subtitleJa;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle =\n    currentPage > 0 ? `Page${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle} language={language}>\n      <Sidebar isIndex />\n      <Page>\n        <Feed edges={edges} />\n        {totalPage > 1 ? (\n          <PaginationBox\n            currentPage={currentPage}\n            totalPage={totalPage}\n            prevPagePath={prevPagePath}\n            nextPagePath={nextPagePath}\n            hasPrevPage={hasPrevPage}\n            hasNextPage={hasNextPage}\n            language={language}\n            dates={dates}\n          />\n        ) : null}\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate(\n    $postsLimit: Int!\n    $postsOffset: Int!\n    $language: String!\n  ) {\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: {\n        frontmatter: {\n          template: { eq: \"post\" }\n          draft: { ne: true }\n          home: { ne: false }\n          language: { eq: $language }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n","// @flow\nimport React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport { Location } from '@reach/router';\nimport type { Edges } from '../../types';\nimport styles from './Feed.module.scss';\nimport { getLanguage } from '../../utils/languageContext';\n\ntype Props = {\n  edges: Edges\n};\n\nconst Feed = ({ edges }: Props) => (\n  <Location>\n    {({ location }) => {\n      const language = getLanguage(location.pathname);\n      return (\n        <div className={styles['feed']}>\n          {edges.map(edge => (\n            <div className={styles['feed__item']} key={edge.node.fields.slug}>\n              <div className={styles['feed__item-meta']}>\n                <time\n                  className={styles['feed__item-meta-time']}\n                  dateTime={moment(edge.node.frontmatter.date).format(\n                    'MMMM D, YYYY'\n                  )}\n                >\n                  {moment(edge.node.frontmatter.date).format(\n                    language === 'en' ? 'MMMM D, YYYY' : 'YYYY/MM/DD'\n                  )}\n                </time>\n                <span className={styles['feed__item-meta-divider']} />\n                <span className={styles['feed__item-meta-category']}>\n                  <Link\n                    to={`${edge.node.fields.categorySlug}${\n                      language === 'en' ? '' : '/ja'\n                    }`}\n                    className={styles['feed__item-meta-category-link']}\n                  >\n                    {edge.node.frontmatter.category}\n                  </Link>\n                </span>\n              </div>\n              <h2 className={styles['feed__item-title']}>\n                <Link\n                  className={styles['feed__item-title-link']}\n                  to={edge.node.fields.slug}\n                  state={{ from: location.pathname }}\n                >\n                  {edge.node.frontmatter.title}\n                </Link>\n              </h2>\n              <p className={styles['feed__item-description']}>\n                {edge.node.frontmatter.description}\n              </p>\n            </div>\n          ))}\n        </div>\n      );\n    }}\n  </Location>\n);\n\nexport default Feed;\n","// @flow\nexport { default } from './Feed';\n"],"sourceRoot":""}